version: '3.8'
services:
  prometheus:
    image: prom/prometheus:v2.36.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - '9090:9090'
    networks:
      - prometheus
      - node_exporter
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == leader
    labels:
      - "com.galasec.description=Prometheus Server"
      - "com.galasec.service=prometheus"

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - node_exporter
    restart: unless-stopped
    deploy:
      mode: global
    labels:
      - "com.galasec.description=Node Exporter"
      - "com.galasec.service=node-exporter"

  grafana:
    image: grafana/grafana:10.3.1
    env_file:
      - .env
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/usr/share/grafana/
      - ./grafana/conf/defaults.ini:/usr/share/grafana/conf/defaults.ini
    depends_on:
      - prometheus
    networks:
      - prometheus
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == leader
    labels:
      - "com.galasec.description=Grafana Dashboard"
      - "com.galasec.service=grafana"

volumes:
  prometheus_data:
  grafana_data:

networks:
  node_exporter:
  prometheus:
